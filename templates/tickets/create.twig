{# templates/tickets/create.twig #}
{% extends "base.twig" %}

{% block title %}Create Ticket - TicketFlow{% endblock %}

{% block body %}
<main id="main" class="flex-1 bg-gray-50 py-12">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-white rounded-xl shadow-lg p-8">
            <h1 class="text-2xl font-bold text-gray-900 mb-6">Create New Ticket</h1>

            <form id="create-form" class="space-y-6">
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Title <span class="text-red-600">*</span></label>
                    <input 
                        type="text" 
                        id="title" 
                        required 
                        class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                        placeholder="e.g., Login button not working"
                    >
                    <p class="mt-1 text-xs text-red-600 hidden" id="title-error">Title is required.</p>
                </div>

                <div>
                    <label for="status" class="block text-sm font-medium text-gray-700">Status <span class="text-red-600">*</span></label>
                    <select 
                        id="status" 
                        required 
                        class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                    >
                        <option value="">Select status</option>
                        <option value="open">Open</option>
                        <option value="in_progress">In Progress</option>
                        <option value="closed">Closed</option>
                    </select>
                    <p class="mt-1 text-xs text-red-600 hidden" id="status-error">Please select a status.</p>
                </div>

                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
                    <textarea 
                        id="description" 
                        rows="4"
                        class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                        placeholder="Provide details..."
                    ></textarea>
                </div>

                <div class="flex space-x-3">
                    <button 
                        type="submit"
                        class="flex-1 py-2 px-4 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
                    >
                        Create Ticket
                    </button>
                    <a href="/tickets" class="flex-1 text-center py-2 px-4 bg-gray-200 text-gray-700 font-medium rounded-lg hover:bg-gray-300 transition-colors">
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</main>
{% endblock %}

{% block scripts %}
<script>
document.getElementById('create-form').addEventListener('submit', function(e) {
    e.preventDefault();

    const title = document.getElementById('title').value.trim();
    const status = document.getElementById('status').value;
    const description = document.getElementById('description').value.trim();

    let valid = true;
    document.querySelectorAll('#create-form .text-red-600').forEach(el => el.classList.add('hidden'));

    if (!title) {
        document.getElementById('title-error').classList.remove('hidden');
        valid = false;
    }
    if (!status || !['open', 'in_progress', 'closed'].includes(status)) {
        document.getElementById('status-error').classList.remove('hidden');
        valid = false;
    }

    if (!valid) {
        showToast('Please fix the errors.', 'error');
        return;
    }

    const tickets = JSON.parse(localStorage.getItem('tickets') || '[]');
    const newTicket = {
        id: Date.now(),
        title,
        status,
        description,
        createdAt: new Date().toISOString().split('T')[0]
    };
    tickets.push(newTicket);
    localStorage.setItem('tickets', JSON.stringify(tickets));

    showToast('Ticket created!', 'success');
    setTimeout(() => window.location.href = '/tickets', 1000);
});
</script>
{% endblock %}